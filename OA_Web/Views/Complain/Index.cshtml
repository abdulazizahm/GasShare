@model IEnumerable<OA_Service.ViewModels.ComplainViewModel>

@{
    ViewData["Title"] = "Complains";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Complain Text
            </th>
            <th>
                Complainer
            </th>
            <th>
                Complained About
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Body)
                </td>
                <td>

                    <a asp-action="Id" asp-controller="Profile" asp-route-id="@item.Comlainer.Id">@item.Comlainer.FirstName @item.Comlainer.LastName</a>
                </td>
                <td>

                    <a asp-action="Id" asp-controller="Profile" asp-route-id="@item.Complained_About.Id" asp-route-complainID="complain">@item.Complained_About.FirstName @item.Complained_About.LastName</a>
                </td>
                <td>
                    <button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#myModal">Notify User</button>
                    @Html.ActionLink("Archive", "Done", new { id = item.Id }, new { @class = " btn btn-seconary" })
                </td>
            </tr>
            <div class="container">
                

                <!-- Modal -->
                <div class="modal fade" id="myModal" role="dialog">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content" style="background-color: #1A203E; color: white">
                            <div class="text-light modal-header p-1 my-2">
                                <div class="col-sm-11">
                                    <h5 class="font-weight-normal modal-title text-left" style="color: white;">Send Notification</h5>
                                </div>
                                <div class="col-sm-1">
                                    <button type="button" class="close" style="font-size: 1.5rem; color: white; margin: 0; padding: 0;" data-dismiss="modal">&times;</button>
                                </div>
                            </div>
                            <form class="form-horizontal" id="form-@item.Id">
                                <input type="hidden" value="@item.Complained_About.Id" name="User_Id" id="User_Id-@item.Id" />
                                <div class="modal-body p-0">
                                    <div class="form-group">
                                        <div class="col-12">
                                            <label class="control-label" for="comment" style=" font-size: 1rem; color: white;">Notification message:</label>
                                            <textarea class="form-control px-2" placeholder="Enter notification text" style="background-color: #e8e8e8; border-radius: 5px; color: black " required rows="5" name="Body" id="Body-@item.Id" oninvalid="this.setCustomValidity('please enter notification that will send to complained_about')" oninput="setCustomValidity('')"></textarea>
                                        </div>
                                        <div class="col-md-2 col-sm-3 hide"></div>
                                    </div>
                                    &nbsp;&nbsp;&nbsp;<span id="message"></span>

                                </div>
                                <div class="modal-footer py-2">
                                    <button type="button" class='btn btn-secondary' data-dismiss="modal" id="@(item.Id)" onclick="sendnot(this)">Send Notification</button>
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }
    </tbody>
</table>

<script> var message = '@ViewBag.message' </script>

@section Scripts
{
    <script>
        function ShowAlert() {
            //var successRegex = /\b(?:successfully)\b/gi;
            var warrnigRegex = /\b(?:already)\b/gi;
            var dangerRegex = /\b(?:cannot|Invalid)\b/gi;

            if (message != null && message != "") {
                if (dangerRegex.test(message)) {
                    createAlert('Opps!', 'Something went wrong', message, 'danger', true, false, 'pageMessages')
                }
                else if (warrnigRegex.test(message)) {
                    createAlert('', '', message, 'warning', true, true, 'pageMessages');
                } else {
                    createAlert('', '', message, 'success', true, true, 'pageMessages');
                }
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            ShowAlert()
        });


        function createAlert(title, summary, details, severity, dismissible, autoDismiss, appendToId) {
            var iconMap = {
                info: "fa fa-info-circle",
                success: "fa fa-thumbs-up",
                warning: "fa fa-exclamation-triangle",
                danger: "fa ffa fa-exclamation-circle"
            };

            var iconAdded = false;

            var alertClasses = ["alert", "animated", "flipInX"];
            alertClasses.push("alert-" + severity.toLowerCase());

            if (dismissible) {
                alertClasses.push("alert-dismissible");
            }

            var msgIcon = $("<i />", {
                "class": iconMap[severity] // you need to quote "class" since it's a reserved keyword
            });

            var msg = $("<div />", {
                "class": alertClasses.join(" ") // you need to quote "class" since it's a reserved keyword
            });

            if (title) {
                var msgTitle = $("<h4 />", {
                    html: title
                }).appendTo(msg);

                if (!iconAdded) {
                    msgTitle.prepend(msgIcon);
                    iconAdded = true;
                }
            }

            if (summary) {
                var msgSummary = $("<strong />", {
                    html: summary
                }).appendTo(msg);

                if (!iconAdded) {
                    msgSummary.prepend(msgIcon);
                    iconAdded = true;
                }
            }

            if (details) {
                var msgDetails = $("<p />", {
                    html: details
                }).appendTo(msg);

                if (!iconAdded) {
                    msgDetails.prepend(msgIcon);
                    iconAdded = true;
                }
            }


            if (dismissible) {
                var msgClose = $("<span />", {
                    "class": "close", // you need to quote "class" since it's a reserved keyword
                    "data-dismiss": "alert",
                    html: "<i class='fa fa-times-circle'></i>"
                }).appendTo(msg);
            }

            $('#' + appendToId).prepend(msg);

            if (autoDismiss) {
                setTimeout(function () {
                    msg.addClass("flipOutX");
                    setTimeout(function () {
                        msg.remove();
                    }, 1000);
                }, 5000);
            }
        }


        function sendnot(not)
        {
            var Body = document.getElementById('Body-'+not.id).value;
            var User_Id = document.getElementById('User_Id-'+ not.id).value;
            //var datar = { User_id: String(), Body: String() };
            if (Body!= '') {
                $.ajax({
                    url: `/Complain/Notification`,
                    type: 'POST',
                    data: {User_Id:User_Id,Body:Body},
                    success: function (result) {
                        createAlert('', '', result, 'success', true, true, 'pageMessages');
                        document.getElementById('Body-' + not.id).innerHTML = "";
                        document.getElementById('Body-' + not.id).value = "";
                    }
                });
            }else
            {
                document.getElementById('message').style = "color:red";
                document.getElementById('message').innerHTML = "notification message is required";
            }

        }


    </script>
} 
