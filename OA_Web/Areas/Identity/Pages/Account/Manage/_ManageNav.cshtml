@inject SignInManager<ApplicationUser> SignInManager
@inject OA_Service.AppServices.AccountAppService account
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    var declined = account.FindByEmail(User.Identity.Name).User_Status == User_Status.Declined;
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link" id="profile" asp-controller="Profile" asp-action="Index">MyProfile</a></li>
    <li class="nav-item"><a class="nav-link" id="changeProfile" asp-controller="Profile" asp-action="EditProfile">Change Personal Info</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="userName" asp-page="./Index">UserName</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>
    @if (declined)
    {
        <li class="nav-item"><a class="nav-link text-danger" asp-action="SubmitProfile" asp-controller="Profile">Submit profile for review</a></li>
    }
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
    @*<li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>*@
    <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" href="/Identity/Account/Manage/DeletePersonalData">Delete Account</a></li>
</ul>
